name: Deploy Conditional Access Policies
on:
  push:
    branches: [ main ]
    paths:
      - 'policies/**'
  workflow_dispatch:

jobs:
  # First job - validate policies
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      
      - name: Validate policy naming convention
        shell: pwsh
        run: ./scripts/validate-policies.ps1
  
  # Second job - deploy policies
  deploy:
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      
      - name: Install Microsoft Graph PowerShell modules
        run: |
          Install-Module Microsoft.Graph.Identity.SignIns -Force -Scope CurrentUser
          Import-Module Microsoft.Graph.Identity.SignIns
        shell: pwsh
        
      - name: Deploy Conditional Access Policies
        id: deploy-policy
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        run: |
          ./scripts/crud-policies.ps1
        shell: pwsh
      
      # Upload summary as artifact
      - name: Upload deployment summary
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: deployment-summary
          path: deployment-summary.json
          retention-days: 5

  # Third job - send notification
  notify:
    needs: deploy
    if: always() 
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      
      # Download summary from previous job
      - name: Download deployment summary
        if: always()
        uses: actions/download-artifact@v2
        with:
          name: deployment-summary
      
      - name: Send detailed notification
        shell: pwsh
        run: |
          ./scripts/send-notification.ps1 `
            -NtfyUrl "${{ secrets.NTFY_URL }}" `
            -SummaryFilePath "deployment-summary.json" `
            -WorkflowName "${{ github.workflow }}" `
            -RunId "${{ github.run_id }}"