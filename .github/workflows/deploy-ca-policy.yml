name: Deploy Conditional Access Policy
on:
  push:
    branches: [ main ]
    paths:
      - 'policies/**'
  workflow_dispatch:

# Add these permissions for OIDC authentication
permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true 
          allow-no-subscriptions: true
      
      - name: Add Azure CLI Microsoft Graph Extension
        run: az extension add --name account

      - name: Install Microsoft Graph PowerShell modules
        run: |
          Install-Module Microsoft.Graph.Identity.SignIns -Force
          Import-Module Microsoft.Graph.Identity.SignIns
        shell: pwsh
        
      - name: Deploy Conditional Access Policy
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        run: |
          $ApplicationId = "${{ secrets.AZURE_CLIENT_ID }}"
                $SecuredPassword = "${{ secrets.AZURE_CLIENT_SECRET }}"
                $tenantID = "${{ secrets.AZURE_TENANT_ID }}"

                $SecuredPasswordPassword = ConvertTo-SecureString `
                -String $SecuredPassword -AsPlainText -Force

                $ClientSecretCredential = New-Object `
                -TypeName System.Management.Automation.PSCredential `
                -ArgumentList $ApplicationId, $SecuredPasswordPassword
          Connect-MgGraph -TenantId $tenantID -ClientSecretCredential $ClientSecretCredential
          # Execute the deployment script
          ./scripts/deploy-policy.ps1
        shell: pwsh